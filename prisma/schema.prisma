generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Airline {
  id              String         @id @default(uuid()) @db.Uuid
  name            String         @unique
  description     String
  foundingDate    DateTime
  website         String
  
  // Many-to-many relationship with Airport
  airports        AirlineAirport[]
  
  // Audit fields (optional but recommended)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  @@map("airlines")
}

// Airport Entity
model Airport {
  id              String         @id @default(uuid()) @db.Uuid
  name            String
  code            String         @unique
  country         String
  city            String
  
  // Many-to-many relationship with Airline
  airlines        AirlineAirport[]
  
  // Audit fields (optional but recommended)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  @@map("airports")
}

// Many-to-many relationship table between Airline and Airport
model AirlineAirport {
  airlineId       String         @db.Uuid
  airportId       String         @db.Uuid
  
  // Relations with main entities
  airline         Airline        @relation(fields: [airlineId], references: [id], onDelete: Cascade)
  airport         Airport        @relation(fields: [airportId], references: [id], onDelete: Cascade)
  
  // Additional fields useful for coverage information
  startDate       DateTime       @default(now())  // Date from which the airline operates at this airport
  active          Boolean        @default(true)   // If the coverage is currently active
  
  // Audit fields
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  // Composite primary key definition
  @@id([airlineId, airportId])
  @@map("airline_airport")
}